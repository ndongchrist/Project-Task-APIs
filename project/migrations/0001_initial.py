# Generated by Django 5.2.5 on 2025-08-30 04:26

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Marks the record as deleted without removing it.')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Stores additional metadata in JSON format.', null=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-created'],
                'indexes': [models.Index(fields=['title'], name='project_pro_title_86db16_idx'), models.Index(fields=['created'], name='project_pro_created_05fdb0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Marks the record as deleted without removing it.')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Stores additional metadata in JSON format.', null=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('todo', 'Todo'), ('in_progress', 'In Progress'), ('done', 'Done')], db_index=True, default='todo', max_length=20)),
                ('estimated_time', models.DurationField(default=datetime.timedelta(0), validators=[django.core.validators.MinValueValidator(datetime.timedelta(0))])),
                ('spent_time', models.DurationField(default=datetime.timedelta(0), validators=[django.core.validators.MinValueValidator(datetime.timedelta(0))])),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='project.project')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Marks the record as deleted without removing it.')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Stores additional metadata in JSON format.', null=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_entries', to='project.task')),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['project', 'status'], name='project_tas_project_4b14b5_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['title'], name='project_tas_title_034f46_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['status'], name='project_tas_status_eb137e_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['created'], name='project_tas_created_406990_idx'),
        ),
        migrations.AddIndex(
            model_name='timeentry',
            index=models.Index(fields=['task', 'start_time'], name='project_tim_task_id_11db73_idx'),
        ),
        migrations.AddIndex(
            model_name='timeentry',
            index=models.Index(fields=['start_time'], name='project_tim_start_t_297ebf_idx'),
        ),
        migrations.AddIndex(
            model_name='timeentry',
            index=models.Index(fields=['end_time'], name='project_tim_end_tim_b0b47a_idx'),
        ),
        migrations.AddConstraint(
            model_name='timeentry',
            constraint=models.UniqueConstraint(condition=models.Q(('end_time__isnull', True)), fields=('task',), name='unique_active_timer_per_task'),
        ),
    ]
